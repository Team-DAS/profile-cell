networks:
  # Red privada para la comunicación interna de la célula de perfiles
  profile-network:
    driver: bridge
    name: profile-network
  # Red compartida para conectarse a la célula de observabilidad
  infrastructure-network:
    external: true
    name: infrastructure-network

  web-gateway:
    external: true
    name: web-gateway

volumes:
  mongo-profile-data:
    driver: local

  minio-data:
    driver: local

services:
  # --- Base de Datos dedicada para la Célula de Perfiles ---
  mongo_profile:
    image: mongo:latest
    container_name: mongo_profile
    restart: unless-stopped
    ports:
      - "27018:27017" # Puerto del host diferente para no chocar con la otra BD
    volumes:
      - mongo-profile-data:/data/db
    networks:
      - profile-network # La BD se mantiene aislada en su red privada

  # --- Microservicios de la Célula 2 (Conectados a ambas redes) ---

  profile-service:
    build:
      context: ./profile-service
    container_name: profile-service
    restart: unless-stopped
    networks:
      - profile-network
      - infrastructure-network # <-- Conectado a la red compartida
    depends_on:
      - mongo_profile
    environment:
      - SERVER_PORT=8091
      - SPRING_DATA_MONGODB_URI=mongodb://mongo_profile:27017/profiles_db
      - RABBITMQ_HOST=rabbitmq-udeajobs

  file-service:
    build:
      context: ./file-service
    container_name: file-service
    restart: unless-stopped
    networks:
      - profile-network
      - infrastructure-network # <-- Conectado a la red compartida
    depends_on:
      - minio
    environment:
      - S3_ENDPOINT_URL=minio:9000
      - S3_ACCESS_KEY=minioadmin
      - S3_SECRET_KEY=minioadmin
      - SERVER_PORT=8092

  # dashboard-service:
  #   ...

  profile-gateway:
    build:
      context: ./profile-gateway
    container_name: profile-gateway
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.profile.rule=PathPrefix(`/profile`)"
      - "traefik.http.routers.profile.entrypoints=web"
      - "traefik.http.services.profile.loadbalancer.server.port=8090"
      - "traefik.http.routers.profile.middlewares=cors-policy@file" # Aplica el middleware CORS definido en dynamic_conf.yml
    networks:
      - profile-network
      - infrastructure-network # <-- Conectado a la red compartida
      - web-gateway
    depends_on:
      - profile-service
    environment:
      - SERVER_PORT=8090

  minio:
    image: minio/minio:latest
    container_name: minio
    restart: unless-stopped
    volumes:
      - minio-data:/data # Mapea el volumen para que los archivos no se pierdan
    ports:
      - "9000:9000" # Puerto para la API (usado por el file-service)
      - "9001:9001" # Puerto para la consola web
    environment:
      - MINIO_ROOT_USER=minioadmin   
      - MINIO_ROOT_PASSWORD=minioadmin 
    command: server /data --console-address ":9001"
    networks:
      - profile-network
